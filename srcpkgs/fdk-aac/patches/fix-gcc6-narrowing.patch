--- libSBRenc/src/ps_encode.cpp	2013-11-25 11:24:00.000000000 +0100
+++ libSBRenc/src/ps_encode.cpp	2016-10-26 13:43:44.302645809 +0200
@@ -147,24 +147,32 @@
 } __PS_CONSTANTS;
 
 
-
+#define FPD(x) static_cast<FIXP_DBL>(x)
 static const FIXP_DBL iidQuant_fx[15] = {
-  0xce000000, 0xdc000000, 0xe4000000, 0xec000000, 0xf2000000, 0xf8000000, 0xfc000000, 0x00000000,
-  0x04000000, 0x08000000, 0x0e000000, 0x14000000, 0x1c000000, 0x24000000, 0x32000000
+  FPD(0xce000000), FPD(0xdc000000), FPD(0xe4000000), FPD(0xec000000),
+  FPD(0xf2000000), FPD(0xf8000000), FPD(0xfc000000), FPD(0x00000000),
+  FPD(0x04000000), FPD(0x08000000), FPD(0x0e000000), FPD(0x14000000),
+  FPD(0x1c000000), FPD(0x24000000), FPD(0x32000000)
 };
 
 static const FIXP_DBL iidQuantFine_fx[31] = {
-  0x9c000001, 0xa6000001, 0xb0000001, 0xba000001, 0xc4000000, 0xce000000, 0xd4000000, 0xda000000,
-  0xe0000000, 0xe6000000, 0xec000000, 0xf0000000, 0xf4000000, 0xf8000000, 0xfc000000, 0x00000000,
-  0x04000000, 0x08000000, 0x0c000000, 0x10000000, 0x14000000, 0x1a000000, 0x20000000, 0x26000000,
-  0x2c000000, 0x32000000, 0x3c000000, 0x45ffffff, 0x4fffffff, 0x59ffffff, 0x63ffffff
+  FPD(0x9c000001), FPD(0xa6000001), FPD(0xb0000001), FPD(0xba000001),
+  FPD(0xc4000000), FPD(0xce000000), FPD(0xd4000000), FPD(0xda000000),
+  FPD(0xe0000000), FPD(0xe6000000), FPD(0xec000000), FPD(0xf0000000),
+  FPD(0xf4000000), FPD(0xf8000000), FPD(0xfc000000), FPD(0x00000000),
+  FPD(0x04000000), FPD(0x08000000), FPD(0x0c000000), FPD(0x10000000),
+  FPD(0x14000000), FPD(0x1a000000), FPD(0x20000000), FPD(0x26000000),
+  FPD(0x2c000000), FPD(0x32000000), FPD(0x3c000000), FPD(0x45ffffff),
+  FPD(0x4fffffff), FPD(0x59ffffff), FPD(0x63ffffff)
 };
 
 
 
 static const FIXP_DBL iccQuant[8] = {
-  0x7fffffff, 0x77ef9d7f, 0x6babc97f, 0x4ceaf27f, 0x2f0ed3c0, 0x00000000, 0xb49ba601, 0x80000000
+  FPD(0x7fffffff), FPD(0x77ef9d7f), FPD(0x6babc97f), FPD(0x4ceaf27f),
+  FPD(0x2f0ed3c0), FPD(0x00000000), FPD(0xb49ba601), FPD(0x80000000)
 };
+#undef FPD
 
 static FDK_PSENC_ERROR InitPSData(
         HANDLE_PS_DATA            hPsData
--- libAACenc/src/adj_thr.cpp	2013-11-25 11:24:00.000000000 +0100
+++ libAACenc/src/adj_thr.cpp	2016-10-26 14:00:02.497950733 +0200
@@ -148,80 +148,82 @@
 
 } BITS2PE_CFG_TAB;
 
+#define LC(x) static_cast<LONG>(x)
 static const BIT_PE_SFAC S_Bits2PeTab16000[] = {
-  { 10000, 0x228F5C29, 0x02FEF55D, 0x1D70A3D7, 0x09BC9D6D, 0x228F5C29, 0x02FEF55D, 0x1C28F5C3, 0x0CBB92CA},
-  { 24000, 0x23D70A3D, 0x029F16B1, 0x2199999A, 0x07DD4413, 0x23D70A3D, 0x029F16B1, 0x2199999A, 0x07DD4413},
-  { 32000, 0x247AE148, 0x11B1D92B, 0x23851EB8, 0x01F75105, 0x247AE148, 0x110A137F, 0x23851EB8, 0x01F75105},
-  { 48000, 0x2D1EB852, 0x6833C600, 0x247AE148, 0x014F8B59, 0x2CCCCCCD, 0x68DB8BAC, 0x247AE148, 0x01F75105},
-  { 64000, 0x60000000, 0x00000000, 0x251EB852, 0x154C985F, 0x60000000, 0x00000000, 0x2570A3D7, 0x154C985F},
-  { 96000, 0x60000000, 0x00000000, 0x39EB851F, 0x088509C0, 0x60000000, 0x00000000, 0x3A3D70A4, 0x088509C0},
-  {128000, 0x60000000, 0x00000000, 0x423D70A4, 0x18A43BB4, 0x60000000, 0x00000000, 0x428F5C29, 0x181E03F7},
-  {148000, 0x60000000, 0x00000000, 0x5147AE14, 0x00000000, 0x60000000, 0x00000000, 0x5147AE14, 0x00000000}
+  { 10000, LC(0x228F5C29), LC(0x02FEF55D), LC(0x1D70A3D7), LC(0x09BC9D6D), LC(0x228F5C29), LC(0x02FEF55D), LC(0x1C28F5C3), LC(0x0CBB92CA)},
+  { 24000, LC(0x23D70A3D), LC(0x029F16B1), LC(0x2199999A), LC(0x07DD4413), LC(0x23D70A3D), LC(0x029F16B1), LC(0x2199999A), LC(0x07DD4413)},
+  { 32000, LC(0x247AE148), LC(0x11B1D92B), LC(0x23851EB8), LC(0x01F75105), LC(0x247AE148), LC(0x110A137F), LC(0x23851EB8), LC(0x01F75105)},
+  { 48000, LC(0x2D1EB852), LC(0x6833C600), LC(0x247AE148), LC(0x014F8B59), LC(0x2CCCCCCD), LC(0x68DB8BAC), LC(0x247AE148), LC(0x01F75105)},
+  { 64000, LC(0x60000000), LC(0x00000000), LC(0x251EB852), LC(0x154C985F), LC(0x60000000), LC(0x00000000), LC(0x2570A3D7), LC(0x154C985F)},
+  { 96000, LC(0x60000000), LC(0x00000000), LC(0x39EB851F), LC(0x088509C0), LC(0x60000000), LC(0x00000000), LC(0x3A3D70A4), LC(0x088509C0)},
+  {128000, LC(0x60000000), LC(0x00000000), LC(0x423D70A4), LC(0x18A43BB4), LC(0x60000000), LC(0x00000000), LC(0x428F5C29), LC(0x181E03F7)},
+  {148000, LC(0x60000000), LC(0x00000000), LC(0x5147AE14), LC(0x00000000), LC(0x60000000), LC(0x00000000), LC(0x5147AE14), LC(0x00000000)}
 };
 
 static const BIT_PE_SFAC S_Bits2PeTab22050[] = {
-  { 16000, 0x1a8f5c29, 0x1797cc3a, 0x128f5c29, 0x18e75793, 0x175c28f6, 0x221426fe, 0x00000000, 0x5a708ede},
-  { 24000, 0x2051eb85, 0x092ccf6c, 0x18a3d70a, 0x13a92a30, 0x1fae147b, 0xbcbe61d,  0x16147ae1, 0x18e75793},
-  { 32000, 0x228f5c29, 0x029f16b1, 0x1d70a3d7, 0x088509c0, 0x228f5c29, 0x29f16b1,  0x1c28f5c3, 0x0b242071},
-  { 48000, 0x23d70a3d, 0x014f8b59, 0x2199999a, 0x03eea20a, 0x23d70a3d, 0x14f8b59,  0x2199999a, 0x03eea20a},
-  { 64000, 0x247ae148, 0x08d8ec96, 0x23851eb8, 0x00fba882, 0x247ae148, 0x88509c0,  0x23851eb8, 0x00fba882},
-  { 96000, 0x2d1eb852, 0x3419e300, 0x247ae148, 0x00a7c5ac, 0x2ccccccd, 0x346dc5d6, 0x247ae148, 0x00fba882},
-  {128000, 0x60000000, 0x00000000, 0x251eb852, 0x029f16b1, 0x60000000, 0x00000000, 0x2570a3d7, 0x009f16b1},
-  {148000, 0x60000000, 0x00000000, 0x26b851ec, 0x00000000, 0x60000000, 0x00000000, 0x270a3d71, 0x00000000}
+  { 16000, LC(0x1a8f5c29), LC(0x1797cc3a), LC(0x128f5c29), LC(0x18e75793), LC(0x175c28f6), LC(0x221426fe), LC(0x00000000), LC(0x5a708ede)},
+  { 24000, LC(0x2051eb85), LC(0x092ccf6c), LC(0x18a3d70a), LC(0x13a92a30), LC(0x1fae147b), LC(0xbcbe61d),  LC(0x16147ae1), LC(0x18e75793)},
+  { 32000, LC(0x228f5c29), LC(0x029f16b1), LC(0x1d70a3d7), LC(0x088509c0), LC(0x228f5c29), LC(0x29f16b1),  LC(0x1c28f5c3), LC(0x0b242071)},
+  { 48000, LC(0x23d70a3d), LC(0x014f8b59), LC(0x2199999a), LC(0x03eea20a), LC(0x23d70a3d), LC(0x14f8b59),  LC(0x2199999a), LC(0x03eea20a)},
+  { 64000, LC(0x247ae148), LC(0x08d8ec96), LC(0x23851eb8), LC(0x00fba882), LC(0x247ae148), LC(0x88509c0),  LC(0x23851eb8), LC(0x00fba882)},
+  { 96000, LC(0x2d1eb852), LC(0x3419e300), LC(0x247ae148), LC(0x00a7c5ac), LC(0x2ccccccd), LC(0x346dc5d6), LC(0x247ae148), LC(0x00fba882)},
+  {128000, LC(0x60000000), LC(0x00000000), LC(0x251eb852), LC(0x029f16b1), LC(0x60000000), LC(0x00000000), LC(0x2570a3d7), LC(0x009f16b1)},
+  {148000, LC(0x60000000), LC(0x00000000), LC(0x26b851ec), LC(0x00000000), LC(0x60000000), LC(0x00000000), LC(0x270a3d71), LC(0x00000000)}
 };
 
 static const BIT_PE_SFAC S_Bits2PeTab24000[] = {
-  { 16000, 0x19eb851f, 0x13a92a30, 0x1147ae14, 0x164840e1, 0x1999999a, 0x12599ed8, 0x00000000, 0x46c764ae},
-  { 24000, 0x1eb851ec, 0x0d1b7176, 0x16b851ec, 0x18e75793, 0x1e147ae1, 0x0fba8827, 0x1147ae14, 0x2c9081c3},
-  { 32000, 0x21eb851f, 0x049667b6, 0x1ccccccd, 0x07357e67, 0x21eb851f, 0x03eea20a, 0x1c28f5c3, 0x07357e67},
-  { 48000, 0x2428f5c3, 0x014f8b59, 0x2051eb85, 0x053e2d62, 0x23d70a3d, 0x01f75105, 0x1fae147b, 0x07357e67},
-  { 64000, 0x24cccccd, 0x05e5f30e, 0x22e147ae, 0x01a36e2f, 0x24cccccd, 0x05e5f30e, 0x23333333, 0x014f8b59},
-  { 96000, 0x2a8f5c29, 0x24b33db0, 0x247ae148, 0x00fba882, 0x2a8f5c29, 0x26fe718b, 0x247ae148, 0x00fba882},
-  {128000, 0x4e666666, 0x1cd5f99c, 0x2570a3d7, 0x010c6f7a, 0x50a3d70a, 0x192a7371, 0x2570a3d7, 0x010c6f7a},
-  {148000, 0x60000000, 0x00000000, 0x26147ae1, 0x00000000, 0x60000000, 0x00000000, 0x26147ae1, 0x00000000}
+  { 16000, LC(0x19eb851f), LC(0x13a92a30), LC(0x1147ae14), LC(0x164840e1), LC(0x1999999a), LC(0x12599ed8), LC(0x00000000), LC(0x46c764ae)},
+  { 24000, LC(0x1eb851ec), LC(0x0d1b7176), LC(0x16b851ec), LC(0x18e75793), LC(0x1e147ae1), LC(0x0fba8827), LC(0x1147ae14), LC(0x2c9081c3)},
+  { 32000, LC(0x21eb851f), LC(0x049667b6), LC(0x1ccccccd), LC(0x07357e67), LC(0x21eb851f), LC(0x03eea20a), LC(0x1c28f5c3), LC(0x07357e67)},
+  { 48000, LC(0x2428f5c3), LC(0x014f8b59), LC(0x2051eb85), LC(0x053e2d62), LC(0x23d70a3d), LC(0x01f75105), LC(0x1fae147b), LC(0x07357e67)},
+  { 64000, LC(0x24cccccd), LC(0x05e5f30e), LC(0x22e147ae), LC(0x01a36e2f), LC(0x24cccccd), LC(0x05e5f30e), LC(0x23333333), LC(0x014f8b59)},
+  { 96000, LC(0x2a8f5c29), LC(0x24b33db0), LC(0x247ae148), LC(0x00fba882), LC(0x2a8f5c29), LC(0x26fe718b), LC(0x247ae148), LC(0x00fba882)},
+  {128000, LC(0x4e666666), LC(0x1cd5f99c), LC(0x2570a3d7), LC(0x010c6f7a), LC(0x50a3d70a), LC(0x192a7371), LC(0x2570a3d7), LC(0x010c6f7a)},
+  {148000, LC(0x60000000), LC(0x00000000), LC(0x26147ae1), LC(0x00000000), LC(0x60000000), LC(0x00000000), LC(0x26147ae1), LC(0x00000000)}
 };
 
 static const BIT_PE_SFAC S_Bits2PeTab32000[] = {
-  { 16000, 0x1199999a, 0x20c49ba6, 0x00000000, 0x4577d955, 0x00000000, 0x60fe4799, 0x00000000, 0x00000000},
-  { 24000, 0x1999999a, 0x0fba8827, 0x10f5c28f, 0x1b866e44, 0x17ae147b, 0x0fba8827, 0x00000000, 0x4d551d69},
-  { 32000, 0x1d70a3d7, 0x07357e67, 0x17ae147b, 0x09d49518, 0x1b851eb8, 0x0a7c5ac4, 0x12e147ae, 0x110a137f},
-  { 48000, 0x20f5c28f, 0x049667b6, 0x1c7ae148, 0x053e2d62, 0x20a3d70a, 0x053e2d62, 0x1b333333, 0x05e5f30e},
-  { 64000, 0x23333333, 0x029f16b1, 0x1f0a3d71, 0x02f2f987, 0x23333333, 0x029f16b1, 0x1e147ae1, 0x03eea20a},
-  { 96000, 0x25c28f5c, 0x2c3c9eed, 0x21eb851f, 0x01f75105, 0x25c28f5c, 0x0a7c5ac4, 0x21eb851f, 0x01a36e2f},
-  {128000, 0x50f5c28f, 0x18a43bb4, 0x23d70a3d, 0x010c6f7a, 0x30000000, 0x168b5cc0, 0x23851eb8, 0x0192a737},
-  {148000, 0x60000000, 0x00000000, 0x247ae148, 0x00dfb23b, 0x3dc28f5c, 0x300f4aaf, 0x247ae148, 0x01bf6476},
-  {160000, 0x60000000, 0xb15b5740, 0x24cccccd, 0x053e2d62, 0x4f5c28f6, 0xbefd0072, 0x251eb852, 0x04fb1184},
-  {200000, 0x00000000, 0x00000000, 0x2b333333, 0x0836be91, 0x00000000, 0x00000000, 0x2b333333, 0x0890390f},
-  {320000, 0x00000000, 0x00000000, 0x4947ae14, 0x00000000, 0x00000000, 0x00000000, 0x4a8f5c29, 0x00000000}
+  { 16000, LC(0x1199999a), LC(0x20c49ba6), LC(0x00000000), LC(0x4577d955), LC(0x00000000), LC(0x60fe4799), LC(0x00000000), LC(0x00000000)},
+  { 24000, LC(0x1999999a), LC(0x0fba8827), LC(0x10f5c28f), LC(0x1b866e44), LC(0x17ae147b), LC(0x0fba8827), LC(0x00000000), LC(0x4d551d69)},
+  { 32000, LC(0x1d70a3d7), LC(0x07357e67), LC(0x17ae147b), LC(0x09d49518), LC(0x1b851eb8), LC(0x0a7c5ac4), LC(0x12e147ae), LC(0x110a137f)},
+  { 48000, LC(0x20f5c28f), LC(0x049667b6), LC(0x1c7ae148), LC(0x053e2d62), LC(0x20a3d70a), LC(0x053e2d62), LC(0x1b333333), LC(0x05e5f30e)},
+  { 64000, LC(0x23333333), LC(0x029f16b1), LC(0x1f0a3d71), LC(0x02f2f987), LC(0x23333333), LC(0x029f16b1), LC(0x1e147ae1), LC(0x03eea20a)},
+  { 96000, LC(0x25c28f5c), LC(0x2c3c9eed), LC(0x21eb851f), LC(0x01f75105), LC(0x25c28f5c), LC(0x0a7c5ac4), LC(0x21eb851f), LC(0x01a36e2f)},
+  {128000, LC(0x50f5c28f), LC(0x18a43bb4), LC(0x23d70a3d), LC(0x010c6f7a), LC(0x30000000), LC(0x168b5cc0), LC(0x23851eb8), LC(0x0192a737)},
+  {148000, LC(0x60000000), LC(0x00000000), LC(0x247ae148), LC(0x00dfb23b), LC(0x3dc28f5c), LC(0x300f4aaf), LC(0x247ae148), LC(0x01bf6476)},
+  {160000, LC(0x60000000), LC(0xb15b5740), LC(0x24cccccd), LC(0x053e2d62), LC(0x4f5c28f6), LC(0xbefd0072), LC(0x251eb852), LC(0x04fb1184)},
+  {200000, LC(0x00000000), LC(0x00000000), LC(0x2b333333), LC(0x0836be91), LC(0x00000000), LC(0x00000000), LC(0x2b333333), LC(0x0890390f)},
+  {320000, LC(0x00000000), LC(0x00000000), LC(0x4947ae14), LC(0x00000000), LC(0x00000000), LC(0x00000000), LC(0x4a8f5c29), LC(0x00000000)}
 };
 
 static const BIT_PE_SFAC S_Bits2PeTab44100[] = {
-  { 16000, 0x10a3d70a, 0x1797cc3a, 0x00000000, 0x00000000, 0x00000000, 0x59210386, 0x00000000, 0x00000000},
-  { 24000, 0x16666666, 0x1797cc3a, 0x00000000, 0x639d5e4a, 0x15c28f5c, 0x12599ed8, 0x00000000, 0x5bc01a37},
-  { 32000, 0x1c28f5c3, 0x049667b6, 0x1851eb85, 0x049667b6, 0x1a3d70a4, 0x088509c0, 0x16666666, 0x053e2d62},
-  { 48000, 0x1e666666, 0x05e5f30e, 0x1a8f5c29, 0x049667b6, 0x1e666666, 0x05e5f30e, 0x18f5c28f, 0x05e5f30e},
-  { 64000, 0x2147ae14, 0x0346dc5d, 0x1ccccccd, 0x02f2f987, 0x2147ae14, 0x02f2f987, 0x1bd70a3d, 0x039abf34},
-  { 96000, 0x247ae148, 0x068db8bb, 0x1fae147b, 0x029f16b1, 0x2428f5c3, 0x0639d5e5, 0x1f5c28f6, 0x029f16b1},
-  {128000, 0x2ae147ae, 0x1b435265, 0x223d70a4, 0x0192a737, 0x2a3d70a4, 0x1040bfe4, 0x21eb851f, 0x0192a737},
-  {148000, 0x3b851eb8, 0x2832069c, 0x23333333, 0x00dfb23b, 0x3428f5c3, 0x2054c288, 0x22e147ae, 0x00dfb23b},
-  {160000, 0x4a3d70a4, 0xc32ebe5a, 0x23851eb8, 0x01d5c316, 0x40000000, 0xcb923a2b, 0x23333333, 0x01d5c316},
-  {200000, 0x00000000, 0x00000000, 0x25c28f5c, 0x0713f078, 0x00000000, 0x00000000, 0x2570a3d7, 0x072a4f17},
-  {320000, 0x00000000, 0x00000000, 0x3fae147b, 0x00000000, 0x00000000, 0x00000000, 0x3fae147b, 0x00000000}
+  { 16000, LC(0x10a3d70a), LC(0x1797cc3a), LC(0x00000000), LC(0x00000000), LC(0x00000000), LC(0x59210386), LC(0x00000000), LC(0x00000000)},
+  { 24000, LC(0x16666666), LC(0x1797cc3a), LC(0x00000000), LC(0x639d5e4a), LC(0x15c28f5c), LC(0x12599ed8), LC(0x00000000), LC(0x5bc01a37)},
+  { 32000, LC(0x1c28f5c3), LC(0x049667b6), LC(0x1851eb85), LC(0x049667b6), LC(0x1a3d70a4), LC(0x088509c0), LC(0x16666666), LC(0x053e2d62)},
+  { 48000, LC(0x1e666666), LC(0x05e5f30e), LC(0x1a8f5c29), LC(0x049667b6), LC(0x1e666666), LC(0x05e5f30e), LC(0x18f5c28f), LC(0x05e5f30e)},
+  { 64000, LC(0x2147ae14), LC(0x0346dc5d), LC(0x1ccccccd), LC(0x02f2f987), LC(0x2147ae14), LC(0x02f2f987), LC(0x1bd70a3d), LC(0x039abf34)},
+  { 96000, LC(0x247ae148), LC(0x068db8bb), LC(0x1fae147b), LC(0x029f16b1), LC(0x2428f5c3), LC(0x0639d5e5), LC(0x1f5c28f6), LC(0x029f16b1)},
+  {128000, LC(0x2ae147ae), LC(0x1b435265), LC(0x223d70a4), LC(0x0192a737), LC(0x2a3d70a4), LC(0x1040bfe4), LC(0x21eb851f), LC(0x0192a737)},
+  {148000, LC(0x3b851eb8), LC(0x2832069c), LC(0x23333333), LC(0x00dfb23b), LC(0x3428f5c3), LC(0x2054c288), LC(0x22e147ae), LC(0x00dfb23b)},
+  {160000, LC(0x4a3d70a4), LC(0xc32ebe5a), LC(0x23851eb8), LC(0x01d5c316), LC(0x40000000), LC(0xcb923a2b), LC(0x23333333), LC(0x01d5c316)},
+  {200000, LC(0x00000000), LC(0x00000000), LC(0x25c28f5c), LC(0x0713f078), LC(0x00000000), LC(0x00000000), LC(0x2570a3d7), LC(0x072a4f17)},
+  {320000, LC(0x00000000), LC(0x00000000), LC(0x3fae147b), LC(0x00000000), LC(0x00000000), LC(0x00000000), LC(0x3fae147b), LC(0x00000000)}
 };
 
 static const BIT_PE_SFAC S_Bits2PeTab48000[] = {
-  { 16000, 0x0f5c28f6, 0x31ceaf25, 0x00000000, 0x00000000, 0x00000000, 0x74a771c9, 0x00000000, 0x00000000},
-  { 24000, 0x1b851eb8, 0x029f16b1, 0x00000000, 0x663c74fb, 0x1c7ae148, 0xe47991bd, 0x00000000, 0x49667b5f},
-  { 32000, 0x1c28f5c3, 0x029f16b1, 0x18f5c28f, 0x07357e67, 0x15c28f5c, 0x0f12c27a, 0x11eb851f, 0x13016484},
-  { 48000, 0x1d70a3d7, 0x053e2d62, 0x1c7ae148, 0xfe08aefc, 0x1d1eb852, 0x068db8bb, 0x1b333333, 0xfeb074a8},
-  { 64000, 0x20000000, 0x03eea20a, 0x1b851eb8, 0x0346dc5d, 0x2051eb85, 0x0346dc5d, 0x1a8f5c29, 0x039abf34},
-  { 96000, 0x23d70a3d, 0x053e2d62, 0x1eb851ec, 0x029f16b1, 0x23851eb8, 0x04ea4a8c, 0x1e147ae1, 0x02f2f987},
-  {128000, 0x28f5c28f, 0x14727dcc, 0x2147ae14, 0x0218def4, 0x2851eb85, 0x0e27e0f0, 0x20f5c28f, 0x0218def4},
-  {148000, 0x3570a3d7, 0x1cd5f99c, 0x228f5c29, 0x01bf6476, 0x30f5c28f, 0x18777e75, 0x223d70a4, 0x01bf6476},
-  {160000, 0x40000000, 0xcb923a2b, 0x23333333, 0x0192a737, 0x39eb851f, 0xd08d4bae, 0x22e147ae, 0x0192a737},
-  {200000, 0x00000000, 0x00000000, 0x251eb852, 0x06775a1b, 0x00000000, 0x00000000, 0x24cccccd, 0x06a4175a},
-  {320000, 0x00000000, 0x00000000, 0x3ccccccd, 0x00000000, 0x00000000, 0x00000000, 0x3d1eb852, 0x00000000}
+  { 16000, LC(0x0f5c28f6), LC(0x31ceaf25), LC(0x00000000), LC(0x00000000), LC(0x00000000), LC(0x74a771c9), LC(0x00000000), LC(0x00000000)},
+  { 24000, LC(0x1b851eb8), LC(0x029f16b1), LC(0x00000000), LC(0x663c74fb), LC(0x1c7ae148), LC(0xe47991bd), LC(0x00000000), LC(0x49667b5f)},
+  { 32000, LC(0x1c28f5c3), LC(0x029f16b1), LC(0x18f5c28f), LC(0x07357e67), LC(0x15c28f5c), LC(0x0f12c27a), LC(0x11eb851f), LC(0x13016484)},
+  { 48000, LC(0x1d70a3d7), LC(0x053e2d62), LC(0x1c7ae148), LC(0xfe08aefc), LC(0x1d1eb852), LC(0x068db8bb), LC(0x1b333333), LC(0xfeb074a8)},
+  { 64000, LC(0x20000000), LC(0x03eea20a), LC(0x1b851eb8), LC(0x0346dc5d), LC(0x2051eb85), LC(0x0346dc5d), LC(0x1a8f5c29), LC(0x039abf34)},
+  { 96000, LC(0x23d70a3d), LC(0x053e2d62), LC(0x1eb851ec), LC(0x029f16b1), LC(0x23851eb8), LC(0x04ea4a8c), LC(0x1e147ae1), LC(0x02f2f987)},
+  {128000, LC(0x28f5c28f), LC(0x14727dcc), LC(0x2147ae14), LC(0x0218def4), LC(0x2851eb85), LC(0x0e27e0f0), LC(0x20f5c28f), LC(0x0218def4)},
+  {148000, LC(0x3570a3d7), LC(0x1cd5f99c), LC(0x228f5c29), LC(0x01bf6476), LC(0x30f5c28f), LC(0x18777e75), LC(0x223d70a4), LC(0x01bf6476)},
+  {160000, LC(0x40000000), LC(0xcb923a2b), LC(0x23333333), LC(0x0192a737), LC(0x39eb851f), LC(0xd08d4bae), LC(0x22e147ae), LC(0x0192a737)},
+  {200000, LC(0x00000000), LC(0x00000000), LC(0x251eb852), LC(0x06775a1b), LC(0x00000000), LC(0x00000000), LC(0x24cccccd), LC(0x06a4175a)},
+  {320000, LC(0x00000000), LC(0x00000000), LC(0x3ccccccd), LC(0x00000000), LC(0x00000000), LC(0x00000000), LC(0x3d1eb852), LC(0x00000000)}
 };
+#undef LC
 
 static const BITS2PE_CFG_TAB bits2PeConfigTab[] = {
   { 16000, S_Bits2PeTab16000, sizeof(S_Bits2PeTab16000)/sizeof(BIT_PE_SFAC) },
--- libFDK/src/fixpoint_math.cpp	2013-11-25 11:24:00.000000000 +0100
+++ libFDK/src/fixpoint_math.cpp	2016-10-26 14:04:57.849034922 +0200
@@ -311,7 +311,7 @@
 }
 
 
-
+#define FPD(x) static_cast<FIXP_DBL>(x)
 
 
 /*****************************************************************************
@@ -319,34 +319,33 @@
     description:  Create and access table with integer LdData (0 to 193)
 *****************************************************************************/
 
-
     LNK_SECTION_CONSTDATA_L1
     static const FIXP_DBL ldIntCoeff[] = {
-      0x80000001, 0x00000000, 0x02000000, 0x032b8034, 0x04000000, 0x04a4d3c2, 0x052b8034, 0x059d5da0,
-      0x06000000, 0x06570069, 0x06a4d3c2, 0x06eb3a9f, 0x072b8034, 0x0766a009, 0x079d5da0, 0x07d053f7,
-      0x08000000, 0x082cc7ee, 0x08570069, 0x087ef05b, 0x08a4d3c2, 0x08c8ddd4, 0x08eb3a9f, 0x090c1050,
-      0x092b8034, 0x0949a785, 0x0966a009, 0x0982809d, 0x099d5da0, 0x09b74949, 0x09d053f7, 0x09e88c6b,
-      0x0a000000, 0x0a16bad3, 0x0a2cc7ee, 0x0a423162, 0x0a570069, 0x0a6b3d79, 0x0a7ef05b, 0x0a92203d,
-      0x0aa4d3c2, 0x0ab7110e, 0x0ac8ddd4, 0x0ada3f60, 0x0aeb3a9f, 0x0afbd42b, 0x0b0c1050, 0x0b1bf312,
-      0x0b2b8034, 0x0b3abb40, 0x0b49a785, 0x0b584822, 0x0b66a009, 0x0b74b1fd, 0x0b82809d, 0x0b900e61,
-      0x0b9d5da0, 0x0baa708f, 0x0bb74949, 0x0bc3e9ca, 0x0bd053f7, 0x0bdc899b, 0x0be88c6b, 0x0bf45e09,
-      0x0c000000, 0x0c0b73cb, 0x0c16bad3, 0x0c21d671, 0x0c2cc7ee, 0x0c379085, 0x0c423162, 0x0c4caba8,
-      0x0c570069, 0x0c6130af, 0x0c6b3d79, 0x0c7527b9, 0x0c7ef05b, 0x0c88983f, 0x0c92203d, 0x0c9b8926,
-      0x0ca4d3c2, 0x0cae00d2, 0x0cb7110e, 0x0cc0052b, 0x0cc8ddd4, 0x0cd19bb0, 0x0cda3f60, 0x0ce2c97d,
-      0x0ceb3a9f, 0x0cf39355, 0x0cfbd42b, 0x0d03fda9, 0x0d0c1050, 0x0d140ca0, 0x0d1bf312, 0x0d23c41d,
-      0x0d2b8034, 0x0d3327c7, 0x0d3abb40, 0x0d423b08, 0x0d49a785, 0x0d510118, 0x0d584822, 0x0d5f7cff,
-      0x0d66a009, 0x0d6db197, 0x0d74b1fd, 0x0d7ba190, 0x0d82809d, 0x0d894f75, 0x0d900e61, 0x0d96bdad,
-      0x0d9d5da0, 0x0da3ee7f, 0x0daa708f, 0x0db0e412, 0x0db74949, 0x0dbda072, 0x0dc3e9ca, 0x0dca258e,
-      0x0dd053f7, 0x0dd6753e, 0x0ddc899b, 0x0de29143, 0x0de88c6b, 0x0dee7b47, 0x0df45e09, 0x0dfa34e1,
-      0x0e000000, 0x0e05bf94, 0x0e0b73cb, 0x0e111cd2, 0x0e16bad3, 0x0e1c4dfb, 0x0e21d671, 0x0e275460,
-      0x0e2cc7ee, 0x0e323143, 0x0e379085, 0x0e3ce5d8, 0x0e423162, 0x0e477346, 0x0e4caba8, 0x0e51daa8,
-      0x0e570069, 0x0e5c1d0b, 0x0e6130af, 0x0e663b74, 0x0e6b3d79, 0x0e7036db, 0x0e7527b9, 0x0e7a1030,
-      0x0e7ef05b, 0x0e83c857, 0x0e88983f, 0x0e8d602e, 0x0e92203d, 0x0e96d888, 0x0e9b8926, 0x0ea03232,
-      0x0ea4d3c2, 0x0ea96df0, 0x0eae00d2, 0x0eb28c7f, 0x0eb7110e, 0x0ebb8e96, 0x0ec0052b, 0x0ec474e4,
-      0x0ec8ddd4, 0x0ecd4012, 0x0ed19bb0, 0x0ed5f0c4, 0x0eda3f60, 0x0ede8797, 0x0ee2c97d, 0x0ee70525,
-      0x0eeb3a9f, 0x0eef69ff, 0x0ef39355, 0x0ef7b6b4, 0x0efbd42b, 0x0effebcd, 0x0f03fda9, 0x0f0809cf,
-      0x0f0c1050, 0x0f10113b, 0x0f140ca0, 0x0f18028d, 0x0f1bf312, 0x0f1fde3d, 0x0f23c41d, 0x0f27a4c0,
-      0x0f2b8034
+      FPD(0x80000001), FPD(0x00000000), FPD(0x02000000), FPD(0x032b8034), FPD(0x04000000), FPD(0x04a4d3c2), FPD(0x052b8034), FPD(0x059d5da0),
+      FPD(0x06000000), FPD(0x06570069), FPD(0x06a4d3c2), FPD(0x06eb3a9f), FPD(0x072b8034), FPD(0x0766a009), FPD(0x079d5da0), FPD(0x07d053f7),
+      FPD(0x08000000), FPD(0x082cc7ee), FPD(0x08570069), FPD(0x087ef05b), FPD(0x08a4d3c2), FPD(0x08c8ddd4), FPD(0x08eb3a9f), FPD(0x090c1050),
+      FPD(0x092b8034), FPD(0x0949a785), FPD(0x0966a009), FPD(0x0982809d), FPD(0x099d5da0), FPD(0x09b74949), FPD(0x09d053f7), FPD(0x09e88c6b),
+      FPD(0x0a000000), FPD(0x0a16bad3), FPD(0x0a2cc7ee), FPD(0x0a423162), FPD(0x0a570069), FPD(0x0a6b3d79), FPD(0x0a7ef05b), FPD(0x0a92203d),
+      FPD(0x0aa4d3c2), FPD(0x0ab7110e), FPD(0x0ac8ddd4), FPD(0x0ada3f60), FPD(0x0aeb3a9f), FPD(0x0afbd42b), FPD(0x0b0c1050), FPD(0x0b1bf312),
+      FPD(0x0b2b8034), FPD(0x0b3abb40), FPD(0x0b49a785), FPD(0x0b584822), FPD(0x0b66a009), FPD(0x0b74b1fd), FPD(0x0b82809d), FPD(0x0b900e61),
+      FPD(0x0b9d5da0), FPD(0x0baa708f), FPD(0x0bb74949), FPD(0x0bc3e9ca), FPD(0x0bd053f7), FPD(0x0bdc899b), FPD(0x0be88c6b), FPD(0x0bf45e09),
+      FPD(0x0c000000), FPD(0x0c0b73cb), FPD(0x0c16bad3), FPD(0x0c21d671), FPD(0x0c2cc7ee), FPD(0x0c379085), FPD(0x0c423162), FPD(0x0c4caba8),
+      FPD(0x0c570069), FPD(0x0c6130af), FPD(0x0c6b3d79), FPD(0x0c7527b9), FPD(0x0c7ef05b), FPD(0x0c88983f), FPD(0x0c92203d), FPD(0x0c9b8926),
+      FPD(0x0ca4d3c2), FPD(0x0cae00d2), FPD(0x0cb7110e), FPD(0x0cc0052b), FPD(0x0cc8ddd4), FPD(0x0cd19bb0), FPD(0x0cda3f60), FPD(0x0ce2c97d),
+      FPD(0x0ceb3a9f), FPD(0x0cf39355), FPD(0x0cfbd42b), FPD(0x0d03fda9), FPD(0x0d0c1050), FPD(0x0d140ca0), FPD(0x0d1bf312), FPD(0x0d23c41d),
+      FPD(0x0d2b8034), FPD(0x0d3327c7), FPD(0x0d3abb40), FPD(0x0d423b08), FPD(0x0d49a785), FPD(0x0d510118), FPD(0x0d584822), FPD(0x0d5f7cff),
+      FPD(0x0d66a009), FPD(0x0d6db197), FPD(0x0d74b1fd), FPD(0x0d7ba190), FPD(0x0d82809d), FPD(0x0d894f75), FPD(0x0d900e61), FPD(0x0d96bdad),
+      FPD(0x0d9d5da0), FPD(0x0da3ee7f), FPD(0x0daa708f), FPD(0x0db0e412), FPD(0x0db74949), FPD(0x0dbda072), FPD(0x0dc3e9ca), FPD(0x0dca258e),
+      FPD(0x0dd053f7), FPD(0x0dd6753e), FPD(0x0ddc899b), FPD(0x0de29143), FPD(0x0de88c6b), FPD(0x0dee7b47), FPD(0x0df45e09), FPD(0x0dfa34e1),
+      FPD(0x0e000000), FPD(0x0e05bf94), FPD(0x0e0b73cb), FPD(0x0e111cd2), FPD(0x0e16bad3), FPD(0x0e1c4dfb), FPD(0x0e21d671), FPD(0x0e275460),
+      FPD(0x0e2cc7ee), FPD(0x0e323143), FPD(0x0e379085), FPD(0x0e3ce5d8), FPD(0x0e423162), FPD(0x0e477346), FPD(0x0e4caba8), FPD(0x0e51daa8),
+      FPD(0x0e570069), FPD(0x0e5c1d0b), FPD(0x0e6130af), FPD(0x0e663b74), FPD(0x0e6b3d79), FPD(0x0e7036db), FPD(0x0e7527b9), FPD(0x0e7a1030),
+      FPD(0x0e7ef05b), FPD(0x0e83c857), FPD(0x0e88983f), FPD(0x0e8d602e), FPD(0x0e92203d), FPD(0x0e96d888), FPD(0x0e9b8926), FPD(0x0ea03232),
+      FPD(0x0ea4d3c2), FPD(0x0ea96df0), FPD(0x0eae00d2), FPD(0x0eb28c7f), FPD(0x0eb7110e), FPD(0x0ebb8e96), FPD(0x0ec0052b), FPD(0x0ec474e4),
+      FPD(0x0ec8ddd4), FPD(0x0ecd4012), FPD(0x0ed19bb0), FPD(0x0ed5f0c4), FPD(0x0eda3f60), FPD(0x0ede8797), FPD(0x0ee2c97d), FPD(0x0ee70525),
+      FPD(0x0eeb3a9f), FPD(0x0eef69ff), FPD(0x0ef39355), FPD(0x0ef7b6b4), FPD(0x0efbd42b), FPD(0x0effebcd), FPD(0x0f03fda9), FPD(0x0f0809cf),
+      FPD(0x0f0c1050), FPD(0x0f10113b), FPD(0x0f140ca0), FPD(0x0f18028d), FPD(0x0f1bf312), FPD(0x0f1fde3d), FPD(0x0f23c41d), FPD(0x0f27a4c0),
+      FPD(0x0f2b8034)
     };
 
 
@@ -387,24 +386,26 @@
 
 LNK_SECTION_CONSTDATA_L1
 static const FIXP_DBL invSqrtTab[SQRT_VALUES] = {
-  0x5a827999, 0x5a287e03, 0x59cf8cbb, 0x5977a0ab, 0x5920b4de, 0x58cac480, 0x5875cade, 0x5821c364,
-  0x57cea99c, 0x577c792f, 0x572b2ddf, 0x56dac38d, 0x568b3631, 0x563c81df, 0x55eea2c3, 0x55a19521,
-  0x55555555, 0x5509dfd0, 0x54bf311a, 0x547545d0, 0x542c1aa3, 0x53e3ac5a, 0x539bf7cc, 0x5354f9e6,
-  0x530eafa4, 0x52c91617, 0x52842a5e, 0x523fe9ab, 0x51fc513f, 0x51b95e6b, 0x51770e8e, 0x51355f19,
-  0x50f44d88, 0x50b3d768, 0x5073fa4f, 0x5034b3e6, 0x4ff601df, 0x4fb7e1f9, 0x4f7a5201, 0x4f3d4fce,
-  0x4f00d943, 0x4ec4ec4e, 0x4e8986e9, 0x4e4ea718, 0x4e144ae8, 0x4dda7072, 0x4da115d9, 0x4d683948,
-  0x4d2fd8f4, 0x4cf7f31b, 0x4cc08604, 0x4c898fff, 0x4c530f64, 0x4c1d0293, 0x4be767f5, 0x4bb23df9,
-  0x4b7d8317, 0x4b4935ce, 0x4b1554a6, 0x4ae1de2a, 0x4aaed0f0, 0x4a7c2b92, 0x4a49ecb3, 0x4a1812fa,
-  0x49e69d16, 0x49b589bb, 0x4984d7a4, 0x49548591, 0x49249249, 0x48f4fc96, 0x48c5c34a, 0x4896e53c,
-  0x48686147, 0x483a364c, 0x480c6331, 0x47dee6e0, 0x47b1c049, 0x4784ee5f, 0x4758701c, 0x472c447c,
-  0x47006a80, 0x46d4e130, 0x46a9a793, 0x467ebcb9, 0x46541fb3, 0x4629cf98, 0x45ffcb80, 0x45d61289,
-  0x45aca3d5, 0x45837e88, 0x455aa1ca, 0x45320cc8, 0x4509beb0, 0x44e1b6b4, 0x44b9f40b, 0x449275ec,
-  0x446b3b95, 0x44444444, 0x441d8f3b, 0x43f71bbe, 0x43d0e917, 0x43aaf68e, 0x43854373, 0x435fcf14,
-  0x433a98c5, 0x43159fdb, 0x42f0e3ae, 0x42cc6397, 0x42a81ef5, 0x42841527, 0x4260458d, 0x423caf8c,
-  0x4219528b, 0x41f62df1, 0x41d3412a, 0x41b08ba1, 0x418e0cc7, 0x416bc40d, 0x4149b0e4, 0x4127d2c3,
-  0x41062920, 0x40e4b374, 0x40c3713a, 0x40a261ef, 0x40818511, 0x4060da21, 0x404060a1, 0x40201814
+  FPD(0x5a827999), FPD(0x5a287e03), FPD(0x59cf8cbb), FPD(0x5977a0ab), FPD(0x5920b4de), FPD(0x58cac480), FPD(0x5875cade), FPD(0x5821c364),
+  FPD(0x57cea99c), FPD(0x577c792f), FPD(0x572b2ddf), FPD(0x56dac38d), FPD(0x568b3631), FPD(0x563c81df), FPD(0x55eea2c3), FPD(0x55a19521),
+  FPD(0x55555555), FPD(0x5509dfd0), FPD(0x54bf311a), FPD(0x547545d0), FPD(0x542c1aa3), FPD(0x53e3ac5a), FPD(0x539bf7cc), FPD(0x5354f9e6),
+  FPD(0x530eafa4), FPD(0x52c91617), FPD(0x52842a5e), FPD(0x523fe9ab), FPD(0x51fc513f), FPD(0x51b95e6b), FPD(0x51770e8e), FPD(0x51355f19),
+  FPD(0x50f44d88), FPD(0x50b3d768), FPD(0x5073fa4f), FPD(0x5034b3e6), FPD(0x4ff601df), FPD(0x4fb7e1f9), FPD(0x4f7a5201), FPD(0x4f3d4fce),
+  FPD(0x4f00d943), FPD(0x4ec4ec4e), FPD(0x4e8986e9), FPD(0x4e4ea718), FPD(0x4e144ae8), FPD(0x4dda7072), FPD(0x4da115d9), FPD(0x4d683948),
+  FPD(0x4d2fd8f4), FPD(0x4cf7f31b), FPD(0x4cc08604), FPD(0x4c898fff), FPD(0x4c530f64), FPD(0x4c1d0293), FPD(0x4be767f5), FPD(0x4bb23df9),
+  FPD(0x4b7d8317), FPD(0x4b4935ce), FPD(0x4b1554a6), FPD(0x4ae1de2a), FPD(0x4aaed0f0), FPD(0x4a7c2b92), FPD(0x4a49ecb3), FPD(0x4a1812fa),
+  FPD(0x49e69d16), FPD(0x49b589bb), FPD(0x4984d7a4), FPD(0x49548591), FPD(0x49249249), FPD(0x48f4fc96), FPD(0x48c5c34a), FPD(0x4896e53c),
+  FPD(0x48686147), FPD(0x483a364c), FPD(0x480c6331), FPD(0x47dee6e0), FPD(0x47b1c049), FPD(0x4784ee5f), FPD(0x4758701c), FPD(0x472c447c),
+  FPD(0x47006a80), FPD(0x46d4e130), FPD(0x46a9a793), FPD(0x467ebcb9), FPD(0x46541fb3), FPD(0x4629cf98), FPD(0x45ffcb80), FPD(0x45d61289),
+  FPD(0x45aca3d5), FPD(0x45837e88), FPD(0x455aa1ca), FPD(0x45320cc8), FPD(0x4509beb0), FPD(0x44e1b6b4), FPD(0x44b9f40b), FPD(0x449275ec),
+  FPD(0x446b3b95), FPD(0x44444444), FPD(0x441d8f3b), FPD(0x43f71bbe), FPD(0x43d0e917), FPD(0x43aaf68e), FPD(0x43854373), FPD(0x435fcf14),
+  FPD(0x433a98c5), FPD(0x43159fdb), FPD(0x42f0e3ae), FPD(0x42cc6397), FPD(0x42a81ef5), FPD(0x42841527), FPD(0x4260458d), FPD(0x423caf8c),
+  FPD(0x4219528b), FPD(0x41f62df1), FPD(0x41d3412a), FPD(0x41b08ba1), FPD(0x418e0cc7), FPD(0x416bc40d), FPD(0x4149b0e4), FPD(0x4127d2c3),
+  FPD(0x41062920), FPD(0x40e4b374), FPD(0x40c3713a), FPD(0x40a261ef), FPD(0x40818511), FPD(0x4060da21), FPD(0x404060a1), FPD(0x40201814)
 };
 
+#undef FPD
+
 LNK_SECTION_INITCODE
 void InitInvSqrtTab()
 {
--- libAACenc/src/aacEnc_rom.cpp	2013-11-25 11:24:00.000000000 +0100
+++ libAACenc/src/aacEnc_rom.cpp	2016-10-26 14:09:56.707120027 +0200
@@ -652,16 +652,19 @@
   TNS filter coefficients
 */
 
+#define FPD(x) static_cast<FIXP_DBL>(x)
+
 /*
   3 bit resolution
 */
 const FIXP_DBL FDKaacEnc_tnsEncCoeff3[8]=
 {
-  0x81f1d201, 0x91261481, 0xadb92301, 0xd438af00, 0x00000000, 0x37898080, 0x64130dff, 0x7cca6fff
+  FPD(0x81f1d201), FPD(0x91261481), FPD(0xadb92301), FPD(0xd438af00),
+  FPD(0x00000000), FPD(0x37898080), FPD(0x64130dff), FPD(0x7cca6fff)
 };
 const FIXP_DBL FDKaacEnc_tnsCoeff3Borders[8]={
-  0x80000001 /*-4*/,  0x87b826df /*-3*/,  0x9df24154 /*-2*/,  0xbfffffe5 /*-1*/,
-  0xe9c5e578 /* 0*/,  0x1c7b90f0 /* 1*/,  0x4fce83a9 /* 2*/,  0x7352f2c3 /* 3*/
+  FPD(0x80000001) /*-4*/,  FPD(0x87b826df) /*-3*/,  FPD(0x9df24154) /*-2*/,  FPD(0xbfffffe5) /*-1*/,
+  FPD(0xe9c5e578) /* 0*/,  FPD(0x1c7b90f0) /* 1*/,  FPD(0x4fce83a9) /* 2*/,  FPD(0x7352f2c3) /* 3*/
 };
 
 /*
@@ -669,15 +672,15 @@
 */
 const FIXP_DBL FDKaacEnc_tnsEncCoeff4[16]=
 {
-  0x808bc881, 0x84e2e581, 0x8d6b4a01, 0x99da9201, 0xa9c45701, 0xbc9dde81, 0xd1c2d500, 0xe87ae540,
-  0x00000000, 0x1a9cd9c0, 0x340ff240, 0x4b3c8bff, 0x5f1f5e7f, 0x6ed9eb7f, 0x79bc387f, 0x7f4c7e7f
+  FPD(0x808bc881), FPD(0x84e2e581), FPD(0x8d6b4a01), FPD(0x99da9201), FPD(0xa9c45701), FPD(0xbc9dde81), FPD(0xd1c2d500), FPD(0xe87ae540),
+  FPD(0x00000000), FPD(0x1a9cd9c0), FPD(0x340ff240), FPD(0x4b3c8bff), FPD(0x5f1f5e7f), FPD(0x6ed9eb7f), FPD(0x79bc387f), FPD(0x7f4c7e7f)
 };
 const FIXP_DBL FDKaacEnc_tnsCoeff4Borders[16]=
 {
-  0x80000001 /*-8*/,  0x822deff0 /*-7*/,  0x88a4bfe6 /*-6*/,  0x932c159d /*-5*/,
-  0xa16827c2 /*-4*/,  0xb2dcde27 /*-3*/,  0xc6f20b91 /*-2*/,  0xdcf89c64 /*-1*/,
-  0xf4308ce1 /* 0*/,  0x0d613054 /* 1*/,  0x278dde80 /* 2*/,  0x4000001b /* 3*/,
-  0x55a6127b /* 4*/,  0x678dde8f /* 5*/,  0x74ef0ed7 /* 6*/,  0x7d33f0da /* 7*/
+  FPD(0x80000001) /*-8*/,  FPD(0x822deff0) /*-7*/,  FPD(0x88a4bfe6) /*-6*/,  FPD(0x932c159d) /*-5*/,
+  FPD(0xa16827c2) /*-4*/,  FPD(0xb2dcde27) /*-3*/,  FPD(0xc6f20b91) /*-2*/,  FPD(0xdcf89c64) /*-1*/,
+  FPD(0xf4308ce1) /* 0*/,  FPD(0x0d613054) /* 1*/,  FPD(0x278dde80) /* 2*/,  FPD(0x4000001b) /* 3*/,
+  FPD(0x55a6127b) /* 4*/,  FPD(0x678dde8f) /* 5*/,  FPD(0x74ef0ed7) /* 6*/,  FPD(0x7d33f0da) /* 7*/
 };
 const FIXP_DBL FDKaacEnc_mTab_4_3Elc[512]={
   FL2FXCONST_DBL(0.3968502629920499),FL2FXCONST_DBL(0.3978840634868335),FL2FXCONST_DBL(0.3989185359354711),FL2FXCONST_DBL(0.3999536794661432),
